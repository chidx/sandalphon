->          /                                                                          sandalphoncommons.Routes
->          /                                                                          jophielcommons.Routes

GET         /                                                                          @org.iatoki.judgels.sandalphon.controllers.ApplicationController.index()
GET         /auth                                                                      @org.iatoki.judgels.sandalphon.controllers.ApplicationController.auth(returnUri: String ?= "")
GET         /authRole                                                                  @org.iatoki.judgels.sandalphon.controllers.ApplicationController.authRole(returnUri: String ?= "")
GET         /afterLogin                                                                @org.iatoki.judgels.sandalphon.controllers.ApplicationController.afterLogin(returnUri: String ?= "")
POST        /viewAs                                                                    @org.iatoki.judgels.sandalphon.controllers.ApplicationController.postViewAs()
GET         /resetViewAs                                                               @org.iatoki.judgels.sandalphon.controllers.ApplicationController.resetViewAs()

GET         /problems                                                                  @org.iatoki.judgels.sandalphon.controllers.ProblemController.index()
GET         /problems/view/                                                            @org.iatoki.judgels.sandalphon.controllers.ProblemController.listProblems(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /problems/create                                                           @org.iatoki.judgels.sandalphon.controllers.ProblemController.createProblem()
POST        /problems/create                                                           @org.iatoki.judgels.sandalphon.controllers.ProblemController.postCreateProblem()

GET         /problems/:pId/view                                                        @org.iatoki.judgels.sandalphon.controllers.ProblemController.viewProblem(pId: Long)
GET         /problems/:pId/update                                                      @org.iatoki.judgels.sandalphon.controllers.ProblemController.updateProblem(pId: Long)
POST        /problems/:pId/update                                                      @org.iatoki.judgels.sandalphon.controllers.ProblemController.postUpdateProblem(pId: Long)

GET         /problems/:pId/enter                                                       @org.iatoki.judgels.sandalphon.controllers.ProblemController.enterProblem(pId: Long)

GET         /problems/:pId/statements                                                  @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToStatement(pId: Long)
GET         /problems/:pId/versions                                                    @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToVersions(pId: Long)
GET         /problems/:pId/partners                                                    @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToPartners(pId: Long)
GET         /problems/:pId/clients                                                     @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToClients(pId: Long)
POST        /problems/:pId/switchLanguage                                              @org.iatoki.judgels.sandalphon.controllers.ProblemController.switchLanguage(pId: Long)

GET         /problems/:pId/statements/view/                                            @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.viewStatement(pId: Long)
POST        /problems/:pId/statements/view/switchLanguage                              @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.viewStatementSwitchLanguage(pId: Long)
GET         /problems/:pId/statements/update                                           @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.updateStatement(pId: Long)
POST        /problems/:pId/statements/update/                                          @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.postUpdateStatement(pId: Long)
POST        /problems/:pId/statements/update/switchLanguage                            @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.updateStatementSwitchLanguage(pId: Long)
GET         /problems/:pId/statements/media/view/                                      @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.listStatementMediaFiles(pId: Long)
POST        /problems/:pId/statements/media                                            @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.postUploadStatementMediaFiles(pId: Long)
GET         /problems/:pId/statements/media/:filename/download                         @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.downloadStatementMediaFile(pId: Long, filename: String)
GET         /problems/:pId/statements/languages/update                                 @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.listStatementLanguages(pId: Long)
POST        /problems/:pId/statements/languages/add                                    @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.postAddStatementLanguage(pId: Long)
GET         /problems/:pId/statements/languages/:lang/enable                           @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.enableStatementLanguage(pId: Long, lang: String)
GET         /problems/:pId/statements/languages/:lang/disable                          @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.disableStatementLanguage(pId: Long, lang: String)
GET         /problems/:pId/statements/languages/:lang/makeDefault                      @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.makeDefaultStatementLanguage(pId: Long, lang: String)

GET         /problems/:pId/statements/render/:filename                                 @org.iatoki.judgels.sandalphon.controllers.apis.ProblemAPIController.renderMediaById(pId: Long, filename: String)
GET         /problems/:pJid/render/:filename                                           @org.iatoki.judgels.sandalphon.controllers.apis.ProblemAPIController.renderMediaByJid(pJid: String, filename: String)
GET         /verifyProblem                                                             @org.iatoki.judgels.sandalphon.controllers.apis.ProblemAPIController.verifyProblem()

GET         /problems/:pId/partners/view                                               @org.iatoki.judgels.sandalphon.controllers.ProblemPartnerController.viewPartners(pId: Long)
GET         /problems/:pId/partners/view/                                              @org.iatoki.judgels.sandalphon.controllers.ProblemPartnerController.listPartners(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /problems/:pId/partners/add                                                @org.iatoki.judgels.sandalphon.controllers.ProblemPartnerController.addPartner(pId: Long)
GET         /problems/:pId/partners/:p2Id/update                                       @org.iatoki.judgels.sandalphon.controllers.ProblemPartnerController.updatePartner(pId: Long, p2Id: Long)

GET         /problems/:pId/versions/history/view                                       @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.listVersionHistory(pId: Long)
GET         /problems/:pId/versions/history/restore/:hash                              @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.restoreVersionHistory(pId: Long, hash: String)
GET         /problems/:pId/versions/local/view                                         @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.viewVersionLocalChanges(pId: Long)
POST        /problems/:pId/versions/local/view                                         @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.postCommitVersionLocalChanges(pId: Long)
GET         /problems/:pId/versions/local/rebase                                       @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.updateVersionLocalChanges(pId: Long)
GET         /problems/:pId/versions/local/discard                                      @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.discardVersionLocalChanges(pId: Long)

GET         /problems/:pId/clients/view/                                               @org.iatoki.judgels.sandalphon.controllers.ProblemClientController.updateClientProblems(pId: Long)
POST        /problems/:pId/clients                                                     @org.iatoki.judgels.sandalphon.controllers.ProblemClientController.postUpdateClientProblems(pId: Long)
GET         /problems/:pId/clients/:cpId                                               @org.iatoki.judgels.sandalphon.controllers.ProblemClientController.viewClientProblem(pId: Long, cpId: Long)

GET         /problems/programming/create                                               @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.createProgrammingProblem()
POST        /problems/programming/create                                               @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.postCreateProgrammingProblem()

GET         /problems/programming/:pId/grading                                         @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.jumpToGrading(pId: Long)
GET         /problems/programming/:pId/submissions                                     @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.jumpToSubmissions(pId: Long)

GET         /problems/programming/:pId/statements/view                                 @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemStatementController.viewStatement(pId: Long)

GET         /problems/programming/:pId/statements/render/:filename                     @org.iatoki.judgels.sandalphon.controllers.apis.ProblemAPIController.renderMediaById(pId: Long, filename: String)

GET         /problems/programming/:pId/partners/add                                    @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemPartnerController.addPartner(pId: Long)
POST        /problems/programming/:pId/partners/add                                    @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemPartnerController.postAddPartner(pId: Long)
GET         /problems/programming/:pId/partners/:p2Id/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemPartnerController.updatePartner(pId: Long, p2Id: Long)
POST        /problems/programming/:pId/partners/:p2Id/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemPartnerController.postUpdatePartner(pId: Long, p2Id: Long)


GET         /problems/programming/:pId/submissions/view                                @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.viewSubmissions(pId: Long)
GET         /problems/programming/:pId/submissions/view/                               @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.listSubmissions(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /problems/programming/:pId/submissions/:sId/view                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.viewSubmission(pId: Long, sId: Long)
GET         /problems/programming/:pId/submissions/:sId/regrade                        @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.regradeSubmission(pId: Long, sId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
POST        /problems/programming/:pId/submissions/regrade                             @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.regradeSubmissions(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
POST        /problems/programming/:pId/submit                                          @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.postSubmit(pId: Long)

GET         /problems/programming/:pId/grading/engine/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.updateGradingEngine(pId: Long)
POST        /problems/programming/:pId/grading/engine/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.postUpdateGradingEngine(pId: Long)
GET         /problems/programming/:pId/grading/config/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.updateGradingConfig(pId: Long)
POST        /problems/programming/:pId/grading/config/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.postUpdateGradingConfig(pId: Long)
GET         /problems/programming/:pId/grading/config/tokilib                          @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.updateGradingConfigByTokilibFormat(pId: Long)
GET         /problems/programming/:pId/grading/config/autoPopulation                   @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.updateGradingConfigByAutoPopulation(pId: Long)
GET         /problems/programming/:pId/grading/testdata/view/                          @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.listGradingTestDataFiles(pId: Long)
POST        /problems/programming/:pId/grading/testdata                                @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.postUploadGradingTestDataFiles(pId: Long)
GET         /problems/programming/:pId/grading/helper/view/                            @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.listGradingHelperFiles(pId: Long)
POST        /problems/programming/:pId/grading/helper                                  @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.postUploadGradingHelperFiles(pId: Long)
GET         /problems/programming/:pId/grading/languageRestriction/update              @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.updateLanguageRestriction(pId: Long)
POST        /problems/programming/:pId/grading/languageRestriction/update              @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.postUpdateLanguageRestriction(pId: Long)


GET         /problems/programming/:pId/grading/testdata/:filename/download             @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.downloadGradingTestDataFile(pId: Long, filename: String)
GET         /problems/programming/:pId/grading/helper/:filename/download               @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.downloadGradingHelperFile(pId: Long, filename: String)

GET         /problems/bundle/create                                                    @org.iatoki.judgels.sandalphon.controllers.BundleProblemController.createBundleProblem()

GET         /problems/bundle/:pId/items                                                @org.iatoki.judgels.sandalphon.controllers.BundleProblemController.jumpToItems(pId: Long)
GET         /problems/bundle/:pId/submissions                                          @org.iatoki.judgels.sandalphon.controllers.BundleProblemController.jumpToSubmissions(pId: Long)

GET         /problems/bundle/:pId/items/view                                           @org.iatoki.judgels.sandalphon.controllers.BundleItemController.viewItems(pId: Long)
GET         /problems/bundle/:pId/items/view/                                          @org.iatoki.judgels.sandalphon.controllers.BundleItemController.listCreateItems(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", filterString ?= "")
GET         /problems/bundle/:pId/items/create                                         @org.iatoki.judgels.sandalphon.controllers.BundleItemController.createItem(pId: Long, itemType: String, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", filterString ?= "")
POST        /problems/bundle/:pId/items/create                                         @org.iatoki.judgels.sandalphon.controllers.BundleItemController.postCreateItem(pId: Long, itemType: String, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc", filterString ?= "")
GET         /problems/bundle/:pId/items/:iJid/update                                   @org.iatoki.judgels.sandalphon.controllers.BundleItemController.updateItem(pId: Long, iJid: String)
POST        /problems/bundle/:pId/items/:iJid/update                                   @org.iatoki.judgels.sandalphon.controllers.BundleItemController.postUpdateItem(pId: Long, iJid: String)
GET         /problems/bundle/:pId/items/:iJid/up                                       @org.iatoki.judgels.sandalphon.controllers.BundleItemController.moveItemUp(pId: Long, iJid: String)
GET         /problems/bundle/:pId/items/:iJid/down                                     @org.iatoki.judgels.sandalphon.controllers.BundleItemController.moveItemDown(pId: Long, iJid: String)
GET         /problems/bundle/:pId/items/:iJid/remove                                   @org.iatoki.judgels.sandalphon.controllers.BundleItemController.removeItem(pId: Long, iJid: String)

GET         /problems/bundle/:pId/statements/view                                      @org.iatoki.judgels.sandalphon.controllers.BundleProblemStatementController.viewStatement(pId: Long)

GET         /problems/bundle/:pId/partners/add                                         @org.iatoki.judgels.sandalphon.controllers.BundleProblemPartnerController.addPartner(pId: Long)
POST        /problems/bundle/:pId/partners/add                                         @org.iatoki.judgels.sandalphon.controllers.BundleProblemPartnerController.postAddPartner(pId: Long)
GET         /problems/bundle/:pId/partners/:p2Id/update                                @org.iatoki.judgels.sandalphon.controllers.BundleProblemPartnerController.updatePartner(pId: Long, p2Id: Long)
POST        /problems/bundle/:pId/partners/:p2Id/update                                @org.iatoki.judgels.sandalphon.controllers.BundleProblemPartnerController.postUpdatePartner(pId: Long, p2Id: Long)

GET         /problems/bundle/:pId/submissions/view                                     @org.iatoki.judgels.sandalphon.controllers.BundleProblemSubmissionController.viewSubmissions(pId: Long)
GET         /problems/bundle/:pId/submissions/view/                                    @org.iatoki.judgels.sandalphon.controllers.BundleProblemSubmissionController.listSubmissions(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /problems/bundle/:pId/submissions/:sId/view                                @org.iatoki.judgels.sandalphon.controllers.BundleProblemSubmissionController.viewSubmission(pId: Long, sId: Long)
GET         /problems/bundle/:pId/submissions/:sId/regrade                             @org.iatoki.judgels.sandalphon.controllers.BundleProblemSubmissionController.regradeSubmission(pId: Long, sId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
POST        /problems/bundle/:pId/submissions/regrade                                  @org.iatoki.judgels.sandalphon.controllers.BundleProblemSubmissionController.regradeSubmissions(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
POST        /problems/bundle/:pId/submit                                               @org.iatoki.judgels.sandalphon.controllers.BundleProblemSubmissionController.postSubmit(pId: Long)


POST        /problem/totp/statement                                                    @org.iatoki.judgels.sandalphon.controllers.apis.ProblemAPIController.viewProblemStatementTOTP()
POST        /problem/bundle/grade                                                      @org.iatoki.judgels.sandalphon.controllers.apis.BundleProblemAPIController.gradeProblem()
POST        /problem/programming/download/grading                                      @org.iatoki.judgels.sandalphon.controllers.apis.ProgrammingProblemAPIController.downloadGradingFiles()
POST        /problem/programming/getGradingLastUpdateTime                              @org.iatoki.judgels.sandalphon.controllers.apis.ProgrammingProblemAPIController.getGradingLastUpdateTime()


GET         /lessons                                                                   @org.iatoki.judgels.sandalphon.controllers.LessonController.index()
GET         /lessons/view/                                                             @org.iatoki.judgels.sandalphon.controllers.LessonController.listLessons(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /lessons/create                                                            @org.iatoki.judgels.sandalphon.controllers.LessonController.createLesson()
POST        /lessons/create                                                            @org.iatoki.judgels.sandalphon.controllers.LessonController.postCreateLesson()

GET         /lessons/:lId/view                                                         @org.iatoki.judgels.sandalphon.controllers.LessonController.viewLesson(lId: Long)
GET         /lessons/:lId/update                                                       @org.iatoki.judgels.sandalphon.controllers.LessonController.updateLesson(lId: Long)
POST        /lessons/:lId/update                                                       @org.iatoki.judgels.sandalphon.controllers.LessonController.postUpdateLesson(lId: Long)

GET         /lessons/:lId/enter                                                        @org.iatoki.judgels.sandalphon.controllers.LessonController.enterLesson(lId: Long)

GET         /lessons/:lId/statements                                                   @org.iatoki.judgels.sandalphon.controllers.LessonController.jumpToStatement(lId: Long)
GET         /lessons/:lId/versions                                                     @org.iatoki.judgels.sandalphon.controllers.LessonController.jumpToVersions(lId: Long)
GET         /lessons/:lId/partners                                                     @org.iatoki.judgels.sandalphon.controllers.LessonController.jumpToPartners(lId: Long)
GET         /lessons/:lId/clients                                                      @org.iatoki.judgels.sandalphon.controllers.LessonController.jumpToClients(lId: Long)
POST        /lessons/:lId/switchLanguage                                               @org.iatoki.judgels.sandalphon.controllers.LessonController.switchLanguage(lId: Long)

GET         /lessons/:lId/statements/view                                              @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.viewStatement(lId: Long)
POST        /lessons/:lId/statements/view/switchLanguage                               @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.viewStatementSwitchLanguage(lId: Long)
GET         /lessons/:lId/statements/update                                            @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.updateStatement(lId: Long)
POST        /lessons/:lId/statements/update/                                           @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.postUpdateStatement(lId: Long)
POST        /lessons/:lId/statements/update/switchLanguage                             @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.updateStatementSwitchLanguage(lId: Long)
GET         /lessons/:lId/statements/media/view/                                       @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.listStatementMediaFiles(lId: Long)
POST        /lessons/:lId/statements/media                                             @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.postUploadStatementMediaFiles(lId: Long)
GET         /lessons/:lId/statements/media/:filename/download                          @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.downloadStatementMediaFile(lId: Long, filename: String)
GET         /lessons/:lId/statements/languages/update                                  @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.listStatementLanguages(lId: Long)
POST        /lessons/:lId/statements/languages/add                                     @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.postAddStatementLanguage(lId: Long)
GET         /lessons/:lId/statements/languages/:lang/enable                            @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.enableStatementLanguage(lId: Long, lang: String)
GET         /lessons/:lId/statements/languages/:lang/disable                           @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.disableStatementLanguage(lId: Long, lang: String)
GET         /lessons/:lId/statements/languages/:lang/makeDefault                       @org.iatoki.judgels.sandalphon.controllers.LessonStatementController.makeDefaultStatementLanguage(lId: Long, lang: String)

GET         /lessons/:lId/statements/render/:filename                                  @org.iatoki.judgels.sandalphon.controllers.apis.LessonAPIController.renderMediaById(lId: Long, filename: String)
GET         /lessons/:lJid/render/:filename                                            @org.iatoki.judgels.sandalphon.controllers.apis.LessonAPIController.renderMediaByJid(lJid: String, filename: String)
GET         /verifyLesson                                                              @org.iatoki.judgels.sandalphon.controllers.apis.LessonAPIController.verifyLesson()

GET         /lessons/:lId/partners/view                                                @org.iatoki.judgels.sandalphon.controllers.LessonPartnerController.viewPartners(lId: Long)
GET         /lessons/:lId/partners/view/                                               @org.iatoki.judgels.sandalphon.controllers.LessonPartnerController.listPartners(lId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /lessons/:lId/partners/add                                                 @org.iatoki.judgels.sandalphon.controllers.LessonPartnerController.addPartner(lId: Long)
POST        /lessons/:lId/partners/add                                                 @org.iatoki.judgels.sandalphon.controllers.LessonPartnerController.postAddPartner(lId: Long)
GET         /lessons/:lId/partners/:pId/update                                         @org.iatoki.judgels.sandalphon.controllers.LessonPartnerController.updatePartner(lId: Long, pId: Long)
POST        /lessons/:lId/partners/:pId/update                                         @org.iatoki.judgels.sandalphon.controllers.LessonPartnerController.postUpdatePartner(lId: Long, pId: Long)

GET         /lessons/:lId/versions/history/view                                        @org.iatoki.judgels.sandalphon.controllers.LessonVersionController.listVersionHistory(lId: Long)
GET         /lessons/:lId/versions/history/restore/:hash                               @org.iatoki.judgels.sandalphon.controllers.LessonVersionController.restoreVersionHistory(lId: Long, hash: String)
GET         /lessons/:lId/versions/local/view                                          @org.iatoki.judgels.sandalphon.controllers.LessonVersionController.viewVersionLocalChanges(lId: Long)
POST        /lessons/:lId/versions/local/view                                          @org.iatoki.judgels.sandalphon.controllers.LessonVersionController.postCommitVersionLocalChanges(lId: Long)
GET         /lessons/:lId/versions/local/rebase                                        @org.iatoki.judgels.sandalphon.controllers.LessonVersionController.updateVersionLocalChanges(lId: Long)
GET         /lessons/:lId/versions/local/discard                                       @org.iatoki.judgels.sandalphon.controllers.LessonVersionController.discardVersionLocalChanges(lId: Long)

GET         /lessons/:lId/clients/view/                                                @org.iatoki.judgels.sandalphon.controllers.LessonClientController.updateClientLessons(lId: Long)
POST        /lessons/:lId/clients                                                      @org.iatoki.judgels.sandalphon.controllers.LessonClientController.postUpdateClientLessons(lId: Long)
GET         /lessons/:lId/clients/:clId                                                @org.iatoki.judgels.sandalphon.controllers.LessonClientController.viewClientLesson(lId: Long, clId: Long)

POST        /lesson/totp/statement                                                     @org.iatoki.judgels.sandalphon.controllers.apis.LessonAPIController.viewLessonStatementTOTP()


GET         /client                                                                    @org.iatoki.judgels.sandalphon.controllers.ClientController.index()
GET         /client/                                                                   @org.iatoki.judgels.sandalphon.controllers.ClientController.listClients(page: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /client/create                                                             @org.iatoki.judgels.sandalphon.controllers.ClientController.createClient()
POST        /client/create                                                             @org.iatoki.judgels.sandalphon.controllers.ClientController.postCreateClient()
GET         /client/:cId                                                               @org.iatoki.judgels.sandalphon.controllers.ClientController.viewClient(cId: Long)
GET         /client/:cId/update                                                        @org.iatoki.judgels.sandalphon.controllers.ClientController.updateClient(cId: Long)
POST        /client/:cId/update                                                        @org.iatoki.judgels.sandalphon.controllers.ClientController.postUpdateClient(cId: Long)

GET         /grader                                                                    @org.iatoki.judgels.sandalphon.controllers.GraderController.index()
GET         /grader/                                                                   @org.iatoki.judgels.sandalphon.controllers.GraderController.listGraders(page: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /grader/create                                                             @org.iatoki.judgels.sandalphon.controllers.GraderController.createGrader()
POST        /grader/create                                                             @org.iatoki.judgels.sandalphon.controllers.GraderController.postCreateGrader()
GET         /grader/:gId                                                               @org.iatoki.judgels.sandalphon.controllers.GraderController.viewGrader(gId: Long)
GET         /grader/:gId/update                                                        @org.iatoki.judgels.sandalphon.controllers.GraderController.updateGrader(gId: Long)
POST        /grader/:gId/update                                                        @org.iatoki.judgels.sandalphon.controllers.GraderController.postUpdateGrader(gId: Long)


GET         /users                                                                     @org.iatoki.judgels.sandalphon.controllers.UserController.index()
GET         /users/                                                                    @org.iatoki.judgels.sandalphon.controllers.UserController.listUsers(page: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /users/create                                                              @org.iatoki.judgels.sandalphon.controllers.UserController.createUser()
POST        /users/create                                                              @org.iatoki.judgels.sandalphon.controllers.UserController.postCreateUser()
GET         /users/:cId                                                                @org.iatoki.judgels.sandalphon.controllers.UserController.viewUser(cId: Long)
GET         /users/:uId/update                                                         @org.iatoki.judgels.sandalphon.controllers.UserController.updateUser(uId: Long)
POST        /users/:uId/update                                                         @org.iatoki.judgels.sandalphon.controllers.UserController.postUpdateUser(uId: Long)
GET         /users/:uId/delete                                                         @org.iatoki.judgels.sandalphon.controllers.UserController.deleteUser(uId: Long)
