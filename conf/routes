# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Imports
->          /                                                                                       frontendcommons.Routes

GET         /                                                                                       @org.iatoki.judgels.sandalphon.controllers.ApplicationController.index()
GET         /auth/:returnUri                                                                        @org.iatoki.judgels.sandalphon.controllers.ApplicationController.auth(returnUri: String)
GET         /authRole/:returnUri                                                                    @org.iatoki.judgels.sandalphon.controllers.ApplicationController.authRole(returnUri: String)
GET         /afterLogin/:returnUri                                                                  @org.iatoki.judgels.sandalphon.controllers.ApplicationController.afterLogin(returnUri: String)
GET         /afterProfile/:returnUri                                                                @org.iatoki.judgels.sandalphon.controllers.ApplicationController.afterProfile(returnUri: String)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                                           controllers.Assets.at(path="/public", file)
GET         /vassets/*file                                                                          controllers.Assets.versioned(path="/public", file: Asset)

GET         /problems                                                                               @org.iatoki.judgels.sandalphon.controllers.ProblemController.index()
GET         /problems/view/                                                                         @org.iatoki.judgels.sandalphon.controllers.ProblemController.listProblems(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /problems/create                                                                        @org.iatoki.judgels.sandalphon.controllers.ProblemController.createProblem()
POST        /problems/create                                                                        @org.iatoki.judgels.sandalphon.controllers.ProblemController.postCreateProblem()

GET         /problems/$pId<[0-9]{1,18}>/view                                                        @org.iatoki.judgels.sandalphon.controllers.ProblemController.viewProblem(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/update                                                      @org.iatoki.judgels.sandalphon.controllers.ProblemController.updateProblem(pId: Long)
POST        /problems/$pId<[0-9]{1,18}>/update                                                      @org.iatoki.judgels.sandalphon.controllers.ProblemController.postUpdateProblem(pId: Long)

GET         /problems/$pId<[0-9]{1,18}>/enter                                                       @org.iatoki.judgels.sandalphon.controllers.ProblemController.enterProblem(pId: Long)

GET         /problems/$pId<[0-9]{1,18}>/statements                                                  @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToStatement(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/versions                                                    @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToVersions(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/partners                                                    @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToPartners(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/clients                                                     @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToClients(pId: Long)

GET         /problems/$pId<[0-9]{1,18}>/statements/view/                                            @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.viewStatement(pId: Long)
POST        /problems/$pId<[0-9]{1,18}>/statements/view/switchLanguage                              @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.viewStatementSwitchLanguage(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/statements/update                                           @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.updateStatement(pId: Long)
POST        /problems/$pId<[0-9]{1,18}>/statements/update/                                          @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.postUpdateStatement(pId: Long)
POST        /problems/$pId<[0-9]{1,18}>/statements/update/switchLanguage                            @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.updateStatementSwitchLanguage(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/statements/media/view/                                      @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.listStatementMediaFiles(pId: Long)
POST        /problems/$pId<[0-9]{1,18}>/statements/media                                            @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.postUploadStatementMediaFiles(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/statements/media/:filename/download                         @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.downloadStatementMediaFile(pId: Long, filename: String)
GET         /problems/$pId<[0-9]{1,18}>/statements/languages/update                                 @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.listStatementLanguages(pId: Long)
POST        /problems/$pId<[0-9]{1,18}>/statements/languages/add                                    @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.postAddStatementLanguage(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/statements/languages/:lang/enable                           @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.enableStatementLanguage(pId: Long, lang: String)
GET         /problems/$pId<[0-9]{1,18}>/statements/languages/:lang/disable                          @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.disableStatementLanguage(pId: Long, lang: String)
GET         /problems/$pId<[0-9]{1,18}>/statements/languages/:lang/makeDefault                      @org.iatoki.judgels.sandalphon.controllers.ProblemStatementController.makeDefaultStatementLanguage(pId: Long, lang: String)

GET         /problems/$pId<[0-9]{1,18}>/statements/render/:filename                                 @org.iatoki.judgels.sandalphon.controllers.apis.ProblemAPIController.renderMediaById(pId: Long, filename: String)
GET         /problems/:pJid/render/:filename                                                        @org.iatoki.judgels.sandalphon.controllers.apis.ProblemAPIController.renderMediaByJid(pJid: String, filename: String)
GET         /verifyProblem                                                                          @org.iatoki.judgels.sandalphon.controllers.apis.ProblemAPIController.verifyProblem()

GET         /problems/$pId<[0-9]{1,18}>/partners/view                                               @org.iatoki.judgels.sandalphon.controllers.ProblemPartnerController.viewPartners(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/partners/view/                                              @org.iatoki.judgels.sandalphon.controllers.ProblemPartnerController.listPartners(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /problems/$pId<[0-9]{1,18}>/partners/add                                                @org.iatoki.judgels.sandalphon.controllers.ProblemPartnerController.addPartner(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/partners/$p2Id<[0-9]{1,18}>/update                          @org.iatoki.judgels.sandalphon.controllers.ProblemPartnerController.updatePartner(pId: Long, p2Id: Long)

GET         /problems/$pId<[0-9]{1,18}>/versions/history/view                                       @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.listVersionHistory(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/versions/history/restore/:hash                              @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.restoreVersionHistory(pId: Long, hash: String)
GET         /problems/$pId<[0-9]{1,18}>/versions/local/view                                         @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.viewVersionLocalChanges(pId: Long)
POST        /problems/$pId<[0-9]{1,18}>/versions/local/view                                         @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.postCommitVersionLocalChanges(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/versions/local/rebase                                       @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.updateVersionLocalChanges(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/versions/local/discard                                      @org.iatoki.judgels.sandalphon.controllers.ProblemVersionController.discardVersionLocalChanges(pId: Long)

GET         /problems/$pId<[0-9]{1,18}>/clients/view/                                               @org.iatoki.judgels.sandalphon.controllers.ProblemClientController.updateClientProblems(pId: Long)
POST        /problems/$pId<[0-9]{1,18}>/clients                                                     @org.iatoki.judgels.sandalphon.controllers.ProblemClientController.postUpdateClientProblems(pId: Long)
GET         /problems/$pId<[0-9]{1,18}>/clients/:cpId                                               @org.iatoki.judgels.sandalphon.controllers.ProblemClientController.viewClientProblem(pId: Long, cpId: Long)

GET         /problems/programming/create                                                            @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.createProgrammingProblem()
POST        /problems/programming/create                                                            @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.postCreateProgrammingProblem()

GET         /problems/programming/$pId<[0-9]{1,18}>/grading                                         @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.jumpToGrading(pId: Long)
GET         /problems/programming/$pId<[0-9]{1,18}>/submissions                                     @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.jumpToSubmissions(pId: Long)

GET         /problems/programming/$pId<[0-9]{1,18}>/statements/view                                 @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemStatementController.viewStatement(pId: Long)

GET         /problems/programming/$pId<[0-9]{1,18}>/statements/render/:filename                     @org.iatoki.judgels.sandalphon.controllers.apis.ProblemAPIController.renderMediaById(pId: Long, filename: String)

GET         /problems/programming/$pId<[0-9]{1,18}>/partners/add                                    @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemPartnerController.addPartner(pId: Long)
POST        /problems/programming/$pId<[0-9]{1,18}>/partners/add                                    @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemPartnerController.postAddPartner(pId: Long)
GET         /problems/programming/$pId<[0-9]{1,18}>/partners/$p2Id<[0-9]{1,18}>/update              @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemPartnerController.updatePartner(pId: Long, p2Id: Long)
POST        /problems/programming/$pId<[0-9]{1,18}>/partners/$p2Id<[0-9]{1,18}>/update              @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemPartnerController.postUpdatePartner(pId: Long, p2Id: Long)


GET         /problems/programming/$pId<[0-9]{1,18}>/submissions/view                                @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.viewSubmissions(pId: Long)
GET         /problems/programming/$pId<[0-9]{1,18}>/submissions/view/                               @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.listSubmissions(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /problems/programming/$pId<[0-9]{1,18}>/submissions/$sId<[0-9]{1,18}>/view              @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.viewSubmission(pId: Long, sId: Long)
GET         /problems/programming/$pId<[0-9]{1,18}>/submissions/$sId<[0-9]{1,18}>/regrade           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.regradeSubmission(pId: Long, sId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
POST        /problems/programming/$pId<[0-9]{1,18}>/submissions/regrade                             @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.regradeSubmissions(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
POST        /problems/programming/$pId<[0-9]{1,18}>/submit                                          @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemSubmissionController.postSubmit(pId: Long)

GET         /problems/programming/$pId<[0-9]{1,18}>/grading/engine/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.updateGradingEngine(pId: Long)
POST        /problems/programming/$pId<[0-9]{1,18}>/grading/engine/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.postUpdateGradingEngine(pId: Long)
GET         /problems/programming/$pId<[0-9]{1,18}>/grading/config/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.updateGradingConfig(pId: Long)
POST        /problems/programming/$pId<[0-9]{1,18}>/grading/config/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.postUpdateGradingConfig(pId: Long)
GET         /problems/programming/$pId<[0-9]{1,18}>/grading/config/tokilib                          @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.updateGradingConfigByTokilibFormat(pId: Long)
GET         /problems/programming/$pId<[0-9]{1,18}>/grading/config/autoPopulation                   @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.updateGradingConfigByAutoPopulation(pId: Long)
GET         /problems/programming/$pId<[0-9]{1,18}>/grading/testdata/view/                          @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.listGradingTestDataFiles(pId: Long)
POST        /problems/programming/$pId<[0-9]{1,18}>/grading/testdata                                @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.postUploadGradingTestDataFiles(pId: Long)
GET         /problems/programming/$pId<[0-9]{1,18}>/grading/helper/view/                            @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.listGradingHelperFiles(pId: Long)
POST        /problems/programming/$pId<[0-9]{1,18}>/grading/helper                                  @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.postUploadGradingHelperFiles(pId: Long)
GET         /problems/programming/$pId<[0-9]{1,18}>/grading/languageRestriction/update              @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.updateLanguageRestriction(pId: Long)
POST        /problems/programming/$pId<[0-9]{1,18}>/grading/languageRestriction/update              @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.postUpdateLanguageRestriction(pId: Long)


GET         /problems/programming/$pId<[0-9]{1,18}>/grading/testdata/:filename/download             @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.downloadGradingTestDataFile(pId: Long, filename: String)
GET         /problems/programming/$pId<[0-9]{1,18}>/grading/helper/:filename/download               @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemGradingController.downloadGradingHelperFile(pId: Long, filename: String)

POST        /problem/programming/download/grading                                                   @org.iatoki.judgels.sandalphon.controllers.apis.ProgrammingProblemAPIController.downloadGradingFiles()
POST        /problem/programming/getGradingLastUpdateTime                                           @org.iatoki.judgels.sandalphon.controllers.apis.ProgrammingProblemAPIController.getGradingLastUpdateTime()
POST        /totp/:cJid/:pJid/statement/:TOTP/:lang/:postSubmitUri/:switchLanguageUri               @org.iatoki.judgels.sandalphon.controllers.apis.ProgrammingProblemAPIController.viewProblemStatementTOTP(cJid: String, pJid: String, TOTP: Int, lang: String, postSubmitUri: String, switchLanguageUri: String)

GET         /client                                                                                 @org.iatoki.judgels.sandalphon.controllers.ClientController.index()
GET         /client/                                                                                @org.iatoki.judgels.sandalphon.controllers.ClientController.list(page: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /client/create                                                                          @org.iatoki.judgels.sandalphon.controllers.ClientController.create()
POST        /client/create                                                                          @org.iatoki.judgels.sandalphon.controllers.ClientController.postCreate()
GET         /client/$cId<[0-9]{1,18}>                                                               @org.iatoki.judgels.sandalphon.controllers.ClientController.view(cId: Long)
GET         /client/$cId<[0-9]{1,18}>/update                                                        @org.iatoki.judgels.sandalphon.controllers.ClientController.update(cId: Long)
POST        /client/$cId<[0-9]{1,18}>/update                                                        @org.iatoki.judgels.sandalphon.controllers.ClientController.postUpdate(cId: Long)

GET         /grader                                                                                 @org.iatoki.judgels.sandalphon.controllers.GraderController.index()
GET         /grader/                                                                                @org.iatoki.judgels.sandalphon.controllers.GraderController.list(page: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /grader/create                                                                          @org.iatoki.judgels.sandalphon.controllers.GraderController.create()
POST        /grader/create                                                                          @org.iatoki.judgels.sandalphon.controllers.GraderController.postCreate()
GET         /grader/$gId<[0-9]{1,18}>                                                               @org.iatoki.judgels.sandalphon.controllers.GraderController.view(gId: Long)
GET         /grader/$gId<[0-9]{1,18}>/update                                                        @org.iatoki.judgels.sandalphon.controllers.GraderController.update(gId: Long)
POST        /grader/$gId<[0-9]{1,18}>/update                                                        @org.iatoki.judgels.sandalphon.controllers.GraderController.postUpdate(gId: Long)


GET         /users                                                                                  @org.iatoki.judgels.sandalphon.controllers.UserController.index()
GET         /users/                                                                                 @org.iatoki.judgels.sandalphon.controllers.UserController.listUsers(page: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /users/$uId<[0-9]{1,18}>/update                                                         @org.iatoki.judgels.sandalphon.controllers.UserController.updateUser(uId: Long)
POST        /users/$uId<[0-9]{1,18}>/update                                                         @org.iatoki.judgels.sandalphon.controllers.UserController.postUpdateUser(uId: Long)
