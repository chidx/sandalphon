# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Imports
->          /                                                                   frontendcommons.Routes

GET         /                                                                   @org.iatoki.judgels.sandalphon.controllers.ApplicationController.index()
GET         /auth/:returnUri                                                    @org.iatoki.judgels.sandalphon.controllers.ApplicationController.auth(returnUri: String)
GET         /authRole/:returnUri                                                @org.iatoki.judgels.sandalphon.controllers.ApplicationController.authRole(returnUri: String)
GET         /afterLogin/:returnUri                                              @org.iatoki.judgels.sandalphon.controllers.ApplicationController.afterLogin(returnUri: String)
GET         /afterProfile/:returnUri                                            @org.iatoki.judgels.sandalphon.controllers.ApplicationController.afterProfile(returnUri: String)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                       controllers.Assets.at(path="/public", file)
GET         /vassets/*file                                                      controllers.Assets.versioned(path="/public", file: Asset)

GET         /problems                                                           @org.iatoki.judgels.sandalphon.controllers.ProblemController.index()
GET         /problems/view/                                                     @org.iatoki.judgels.sandalphon.controllers.ProblemController.list(pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")

GET         /problems/:pId/view                                                 @org.iatoki.judgels.sandalphon.controllers.ProblemController.view(pId: Long)

GET         /problems/:pId/general                                              @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToGeneral(pId: Long)
GET         /problems/:pId/statement                                            @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToStatement(pId: Long)
GET         /problems/:pId/clients                                              @org.iatoki.judgels.sandalphon.controllers.ProblemController.jumpToClients(pId: Long)

GET         /problems/:pId/statement/view                                       @org.iatoki.judgels.sandalphon.controllers.ProblemController.viewStatement(pId: Long)
GET         /problems/:pId/statement/update                                     @org.iatoki.judgels.sandalphon.controllers.ProblemController.updateStatement(pId: Long)
POST        /problems/:pId/statement/update                                     @org.iatoki.judgels.sandalphon.controllers.ProblemController.postUpdateStatement(pId: Long)
GET         /problems/:pId/statement/render/:filename                           @org.iatoki.judgels.sandalphon.controllers.ProblemController.renderMediaById(pId: Long, filename: String)
GET         /problems/:pId/statement/media/view/                                @org.iatoki.judgels.sandalphon.controllers.ProblemController.listStatementMediaFiles(pId: Long)
POST        /problems/:pId/statement/media                                      @org.iatoki.judgels.sandalphon.controllers.ProblemController.postUploadStatementMediaFiles(pId: Long)
GET         /problems/:pId/statement/media/:filename/download                   @org.iatoki.judgels.sandalphon.controllers.ProblemController.downloadStatementMediaFile(pId: Long, filename: String)

GET         /problems/:pJid/render/:filename                                    @org.iatoki.judgels.sandalphon.controllers.ProblemController.renderMediaByJid(pJid: String, filename: String)
GET         /verifyProblem                                                      @org.iatoki.judgels.sandalphon.controllers.ProblemController.verifyProblem()

GET         /problems/:pId/clients/view/                                        @org.iatoki.judgels.sandalphon.controllers.ProblemController.updateClientProblems(pId: Long)
POST        /problems/:pId/clients                                              @org.iatoki.judgels.sandalphon.controllers.ProblemController.postUpdateClientProblems(pId: Long)
GET         /problems/:pId/clients/:cpId                                        @org.iatoki.judgels.sandalphon.controllers.ProblemController.viewClientProblem(pId: Long, cpId: Long)

GET         /problems/programming/:pId/grading                                  @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.jumpToGrading(pId: Long)
GET         /problems/programming/:pId/submissions                              @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.jumpToSubmissions(pId: Long)

GET         /problems/programming/create                                        @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.create()
POST        /problems/programming/create                                        @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.postCreate()

GET         /problems/programming/:pId/statement/view                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.viewStatement(pId: Long)
GET         /problems/programming/:pId/statement/render/:filename               @org.iatoki.judgels.sandalphon.controllers.ProblemController.renderMediaById(pId: Long, filename: String)

GET         /problems/programming/:pId/general/view                             @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.viewGeneral(pId: Long)
GET         /problems/programming/:pId/general/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.updateGeneral(pId: Long)
POST        /problems/programming/:pId/general/update                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.postUpdateGeneral(pId: Long)

GET         /problems/programming/:pId/submissions/view                         @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.viewSubmissions(pId: Long)
GET         /problems/programming/:pId/submissions/view/                        @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.listSubmissions(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")
GET         /problems/programming/:pId/submissions/:sId/view                    @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.viewSubmission(pId: Long, sId: Long)
GET         /problems/programming/:pId/submissions/:sId/regrade                 @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.regradeSubmission(pId: Long, sId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")

POST        /problems/programming/:pId/submissions/regrade                      @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.regradeSubmissions(pId: Long, pageIndex: Long ?= 0, orderBy ?= "id", orderDir ?= "desc")

GET         /problems/programming/:pId/grading/config/update                    @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.updateGradingConfig(pId: Long)
POST        /problems/programming/:pId/grading/config/update                    @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.postUpdateGradingConfig(pId: Long)
GET         /problems/programming/:pId/grading/config/tokilib                   @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.updateGradingConfigByTokilibFormat(pId: Long)
GET         /problems/programming/:pId/grading/config/autoPopulation            @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.updateGradingConfigByAutoPopulation(pId: Long)
GET         /problems/programming/:pId/grading/testdata/view/                   @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.listGradingTestDataFiles(pId: Long)
POST        /problems/programming/:pId/grading/testdata                         @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.postUploadGradingTestDataFiles(pId: Long)
GET         /problems/programming/:pId/grading/helper/view/                     @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.listGradingHelperFiles(pId: Long)
POST        /problems/programming/:pId/grading/helper                           @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.postUploadGradingHelperFiles(pId: Long)

POST        /problems/programming/:pId/submit                                   @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.postSubmit(pId: Long)

GET         /problems/programming/:pId/grading/testdata/:filename/download      @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.downloadGradingTestDataFile(pId: Long, filename: String)
GET         /problems/programming/:pId/grading/helper/:filename/download        @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.downloadGradingHelperFile(pId: Long, filename: String)

POST        /problems/programming/download/grading                              @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.downloadGradingFiles()

POST        /problems/programming/getGradingLastUpdateTime                      @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.getGradingLastUpdateTime()

POST        /totp/:cJid/:pJid/statement/:TOTP/:lang/:postSubmitUri              @org.iatoki.judgels.sandalphon.controllers.ProgrammingProblemController.viewProblemStatementTOTP(cJid: String, pJid: String, TOTP: Int, lang: String, postSubmitUri: String)

GET         /client                                                             @org.iatoki.judgels.sandalphon.controllers.ClientController.index()
GET         /client/                                                            @org.iatoki.judgels.sandalphon.controllers.ClientController.list(page: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /client/create                                                      @org.iatoki.judgels.sandalphon.controllers.ClientController.create()
POST        /client/create                                                      @org.iatoki.judgels.sandalphon.controllers.ClientController.postCreate()
GET         /client/:cId                                                        @org.iatoki.judgels.sandalphon.controllers.ClientController.view(cId: Long)
GET         /client/:cId/update                                                 @org.iatoki.judgels.sandalphon.controllers.ClientController.update(cId: Long)
POST        /client/:cId/update                                                 @org.iatoki.judgels.sandalphon.controllers.ClientController.postUpdate(cId: Long)

GET         /grader                                                             @org.iatoki.judgels.sandalphon.controllers.GraderController.index()
GET         /grader/                                                            @org.iatoki.judgels.sandalphon.controllers.GraderController.list(page: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /grader/create                                                      @org.iatoki.judgels.sandalphon.controllers.GraderController.create()
POST        /grader/create                                                      @org.iatoki.judgels.sandalphon.controllers.GraderController.postCreate()
GET         /grader/:gId                                                        @org.iatoki.judgels.sandalphon.controllers.GraderController.view(gId: Long)
GET         /grader/:gId/update                                                 @org.iatoki.judgels.sandalphon.controllers.GraderController.update(gId: Long)
POST        /grader/:gId/update                                                 @org.iatoki.judgels.sandalphon.controllers.GraderController.postUpdate(gId: Long)


GET         /userRole                                                           @org.iatoki.judgels.sandalphon.controllers.UserRoleController.index()
GET         /userRole/                                                          @org.iatoki.judgels.sandalphon.controllers.UserRoleController.list(page: Long ?= 0, orderBy ?= "id", orderDir ?= "asc", filterString ?= "")
GET         /userRole/:uId/update                                               @org.iatoki.judgels.sandalphon.controllers.UserRoleController.update(uId: Long)
POST        /userRole/:uId/update                                               @org.iatoki.judgels.sandalphon.controllers.UserRoleController.postUpdate(uId: Long)
